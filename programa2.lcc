def bubble_sort(){

    int ARR[50];
    int NUM;
    int X;
    int Y;
    int TEMP;    

    print "Please Enter the Number of Elements you want in the array ";

    read NUM;

    print "Please Enter the Value of Elements ";

    for(X = 0; X < NUM; X = X + 1){
        read ARR[X];
    }

    for(X = 0; X < NUM - 1; X = X + 1){       
        for(Y = 0; Y < NUM - X - 1; Y = Y + 1){          
            if(ARR[Y] > ARR[Y + 1]){               
                TEMP = ARR[Y];
                ARR[Y] = ARR[Y + 1];
                ARR[Y + 1] = TEMP;
            }
        }
    }

    print "Array after implementing bubble sort";

    for(X = 0; X < NUM; X = X + 1){
        print ARR[X];

    }

    return 0;
}

def even_or_odd() {
    int NUM;
    print "Enter an integer ";
    read NUM;

    // true if num is perfectly divisible by 2
    // neo eh  possivel o caractere de modulos
    // por isso troquei por divisao normal
    if(NUM / 2 == 0)
        print "is even";
    else
        print "is odd";
    
    return 0;
}

def vowel_or_consonant() {
    string C;
    print "Enter an alphabet ";
    read C;
    string A;
    string E;
    string I;
    string O;
    string U;

    A = "a";
    E = "e";
    I = "i";
    O = "o";
    U = "u";

    // evaluates to 1 (true) if c is a vowel
    if (C == A){
        print "is a vowel";
    }else if (C == E){
        print "is a vowel";
    }else if (C == I){
        print "is a vowel";
    }else if (C == O){
        print "is a vowel";
    }else if (C == U){
        print "is a vowel";
    }else{
        print "is a consonant";
    }
}

def fibonacci() {
  int I;
  int N;

  // initialize first and second terms
  int T1;
  T1 = 0;
  int T2;
  T2 = 1;

  // initialize the next term (3rd term)
  int NEXTTERM;
  NEXTTERM = T1 + T2;

  // get no. of terms from user
  print "Enter the number of terms ";
  read N;

  // print the first two terms t1 and t2
   print "Fibonacci Series ";
   print T1;
   print "-";
   print T2;

  // print 3rd to nth terms
  for (I = 3; I <= N; I = I + 1) {
    print NEXTTERM;
    T1 = T2;
    T2 = NEXTTERM;
    NEXTTERM = T1 + T2;
  }

  return 0;
}